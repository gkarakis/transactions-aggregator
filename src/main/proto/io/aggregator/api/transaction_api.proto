syntax = "proto3";

import "kalix/annotations.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "io/aggregator/entity/transaction_entity.proto";

package io.aggregator.api;

option java_outer_classname = "TransactionApi";

service Transaction {
  option (kalix.codegen) = {
    event_sourced_entity: {
      name: "io.aggregator.entity.Transaction"
      entity_type: "transaction"
      state: "io.aggregator.entity.TransactionState"
      events: [
        "io.aggregator.entity.IncidentAdded"
      ]
    }
  };

  rpc PaymentPriced(PaymentPricedCommand) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/transaction/payment-priced"
      body: "*"
    };
  }

  rpc GetTransaction(GetTransactionRequest) returns (GetTransactionResponse) {
    option (google.api.http) = {
      get: "/transaction/{transaction_id}"
    };
  }
}

message PaymentPricedCommand {
  string transaction_id = 1 [(kalix.field).entity_key = true];
  string shop_id = 2;
  string event_type = 3;
  google.protobuf.Timestamp timestamp = 4;
  repeated PricedItem priced_item = 5;
}

message PricedItem {
  string service_code = 1;
  string priced_item_amount = 2;
}

message GetTransactionRequest {
  string transaction_id = 1 [(kalix.field).entity_key = true];
}

message GetTransactionResponse {
  string transaction_id = 1;
  string merchant_id = 2;
  string shop_id = 3;
  string transaction_amount = 4;
  google.protobuf.Timestamp transaction_timestamp = 5;
  repeated entity.TransactionIncident transaction_incident = 6;
}
