syntax = "proto3";

import "akkaserverless/annotations.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

package io.aggregator.api;

option java_outer_classname = "TransactionApi";

service Transaction {
  option (akkaserverless.codegen) = {
    event_sourced_entity: {
      name: "io.aggregator.entity.Transaction"
      entity_type: "transaction"
      state: "io.aggregator.entity.TransactionState"
      events: [
        "io.aggregator.entity.TransactionCreated"  //
      ]
    }
  };

  rpc CreateTransaction(CreateTransactionCommand) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/transaction/{transaction_id}/{service}/{account}/add"
      body: "*"
    };
  }

  rpc GetTransaction(GetTransactionRequest) returns (GetTransactionResponse) {
    option (google.api.http) = {
      get: "/transaction/{transaction_id}/{service}/{account}"
    };
  }
}

message CreateTransactionCommand {
  string transaction_id = 1 [(akkaserverless.field).entity_key = true];
  string service = 2 [(akkaserverless.field).entity_key = true];
  string account = 3 [(akkaserverless.field).entity_key = true];
  double transaction_amount = 4;
  string merchant_id = 5;
  google.protobuf.Timestamp transaction_timestamp = 6;
}

message GetTransactionRequest {
  string transaction_id = 1 [(akkaserverless.field).entity_key = true];
  string service = 2 [(akkaserverless.field).entity_key = true];
  string account = 3 [(akkaserverless.field).entity_key = true];
}

message GetTransactionResponse {
  TransactionKey transaction_key = 1;
  string merchant_id = 2;
  double transaction_amount = 3;
  google.protobuf.Timestamp transaction_timestamp = 4;
}

message TransactionKey {
  string transaction_id = 1;
  string service = 2;
  string account = 3;
}
