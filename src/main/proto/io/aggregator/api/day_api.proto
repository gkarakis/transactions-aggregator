syntax = "proto3";

import "kalix/annotations.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "io/aggregator/entity/transaction_merchant_key.proto";

package io.aggregator.api;

option java_outer_classname = "DayApi";

service Day {
  option (kalix.codegen) = {
    event_sourced_entity: {
      name: "io.aggregator.entity.Day"
      entity_type: "day"
      state: "io.aggregator.entity.DayState"
      events: [
        "io.aggregator.entity.DayActivated",
        "io.aggregator.entity.HourAdded",
        "io.aggregator.entity.DayAggregationRequested",
        "io.aggregator.entity.DayAggregated",
        "io.aggregator.entity.ActiveHourAggregated"  //
      ]
    }
  };

  rpc AddHour(AddHourCommand) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/day/add-hour"
      body: "*"
    };
  }

  rpc AggregateDay(AggregateDayCommand) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/day/aggregate-day"
      body: "*"
    };
  }

  rpc HourAggregation(HourAggregationCommand) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/day/hour-aggregation"
      body: "*"
    };
  }
}

message AddHourCommand {
  string merchant_id = 1 [(kalix.field).entity_key = true];
  int64 epoch_day = 2 [(kalix.field).entity_key = true];
  int64 epoch_hour = 3;
}

message AggregateDayCommand {
  string merchant_id = 1 [(kalix.field).entity_key = true];
  int64 epoch_day = 2 [(kalix.field).entity_key = true];
  google.protobuf.Timestamp aggregate_request_timestamp = 3;
  string payment_id = 4;
}

message HourAggregationCommand {
  string merchant_id = 1 [(kalix.field).entity_key = true];
  int64 epoch_day = 2 [(kalix.field).entity_key = true];
  int64 epoch_hour = 3;
  repeated entity.MoneyMovement money_movements = 4;
  google.protobuf.Timestamp last_update_timestamp = 5;
  google.protobuf.Timestamp aggregate_request_timestamp = 6;
  string payment_id = 7;
}
