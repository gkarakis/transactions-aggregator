syntax = "proto3";

package io.aggregator.view;

import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "akkaserverless/annotations.proto";
import "google/protobuf/timestamp.proto";
import "io/aggregator/entity/day_entity.proto";
import "io/aggregator/view/daily_totals.proto";

option java_outer_classname = "DailyTotalsByMerchantModel";

service DailyTotalsByMerchant {
  option (akkaserverless.codegen) = {
    view: {}
  };

  rpc GetDailyTotalsByMerchant(DailyTotalsByMerchantRequest) returns (DailyTotalsByMerchantResponse) {
    option (akkaserverless.method).view.query = {
      query: "SELECT * AS daily_totals"
             "  FROM daily_totals_by_merchant"
             " WHERE merchant_id = :merchant_id"
    };
    option (google.api.http) = {
      get: "/daily-totals-by-merchant"
    };
  }

  rpc OnDayActivated(entity.DayActivated) returns (DailyTotal) {
    option (akkaserverless.method).eventing.in = {
      event_sourced_entity: "day"
    };
    option (akkaserverless.method).view.update = {
      table: "daily_totals_by_merchant"
      transform_updates: true
    };
  }

  rpc OnDayAggregated(entity.DayAggregated) returns (DailyTotal) {
    option (akkaserverless.method).eventing.in = {
      event_sourced_entity: "day"
    };
    option (akkaserverless.method).view.update = {
      table: "daily_totals_by_merchant"
      transform_updates: true
    };
  }

  rpc IgnoreOtherEvents(google.protobuf.Any) returns (DailyTotal) {
    option (akkaserverless.method).eventing.in = {
      event_sourced_entity: "day"
    };
    option (akkaserverless.method).view.update = {
      table: "daily_totals_by_merchant"
      transform_updates: true
    };
  }
}

message DailyTotalsByMerchantRequest {
  string merchant_id = 1;
}

message DailyTotalsByMerchantResponse {
  repeated DailyTotal daily_totals = 1;
}
