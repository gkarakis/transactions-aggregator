syntax = "proto3";

package io.aggregator.view;

import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "kalix/annotations.proto";
import "google/protobuf/timestamp.proto";
import "io/aggregator/entity/payment_entity.proto";
import "io/aggregator/view/merchant_payment.proto";

option java_outer_classname = "ActiveMerchantPaymentsModel";

service ActiveMerchantPayments {
  option (kalix.codegen) = {
    view: {}
  };

  rpc GetActiveMerchantPayments(ActiveMerchantPaymentsRequest) returns (ActiveMerchantPaymentsResponse) {
    option (kalix.method).view.query = {
      query: "SELECT * AS merchant_payments"
             "  FROM all_merchant_payments"
             " WHERE payment_timestamp IS NULL"
    };
    option (google.api.http) = {
      post: "/active-merchant-payments"
    };
  }

  rpc OnActiveDayAggregated(entity.ActiveDayAggregated) returns (MerchantPayment) {
    option (kalix.method).eventing.in = {
      event_sourced_entity: "payment"
    };
    option (kalix.method).view.update = {
      table: "all_merchant_payments"
      transform_updates: true
    };
  }

  rpc OnPaymentAggregated(entity.PaymentAggregated) returns (MerchantPayment) {
    option (kalix.method).eventing.in = {
      event_sourced_entity: "payment"
    };
    option (kalix.method).view.update = {
      table: "all_merchant_payments"
      transform_updates: true
    };
  }

  rpc IgnoreOtherEvents(google.protobuf.Any) returns (MerchantPayment) {
    option (kalix.method).eventing.in = {
      event_sourced_entity: "payment"
    };
    option (kalix.method).view.update = {
      table: "all_merchant_payments"
      transform_updates: true
    };
  }
}

message ActiveMerchantPaymentsRequest {
  int32 start_from = 1;
  int32 count = 2;
}

message ActiveMerchantPaymentsResponse {
  repeated MerchantPayment merchant_payments = 1;
}
