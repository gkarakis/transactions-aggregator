syntax = "proto3";

package io.aggregator.action;

import "akkaserverless/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";
import "io/aggregator/entity/sub_second_entity.proto";

option java_outer_classname = "SubSecondToTransactionService";

service SubSecondToTransaction {
  option (akkaserverless.codegen) = {
    action: {}
  };

  rpc OnTransactionPaid(entity.TransactionPaid) returns (google.protobuf.Empty) {
    option (akkaserverless.method).eventing.in = {
      event_sourced_entity: "sub_second"
    };
  }

  rpc IgnoreOtherEvents(google.protobuf.Any) returns (google.protobuf.Empty) {
    option (akkaserverless.method).eventing.in = {
      event_sourced_entity: "sub_second"
    };
  }
}
